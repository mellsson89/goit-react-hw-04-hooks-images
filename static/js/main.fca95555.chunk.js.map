{"version":3,"sources":["components/ImageGalleryItem/styles/imageGalleryItems.module.scss","components/Button/styles/button.module.scss","components/Modal/styles/modal.module.scss","components/ImageGallery/styles/imageGallery.module.scss","styles/app.module.scss","components/SearchBar/styles/Searchbar.module.scss","components/SearchBar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","services/gallery-api.js","index.js"],"names":["module","exports","Searchbar","onClick","useState","query","setQuery","className","style","SearchBar","SearchForm","onSubmit","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","imgGallery","onClickImg","map","id","webformatURL","user","src","alt","ImageGalleryItemImage","ImageGallery","Button","text","status","Container","disabled","modalRoot","document","querySelector","Modal","children","onClose","closeModalEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","target","Modal__content","App","setImgGallery","searchQuery","setSearchQuery","page","setPage","largeImageURL","setLargeImageURL","isLoading","setIsLoading","activeButton","setActiveButton","fetchImages","axios","get","then","data","hits","fetchGallery","prevPage","scrollTo","top","documentElement","scrollHeight","behavior","finally","find","img","color","height","width","timeout","spinner","length","imgLarge","altImg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fca95555.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItems_ImageGalleryItem__6Hj2W\",\"ImageGalleryItemImage\":\"imageGalleryItems_ImageGalleryItemImage__2_LRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"button_Container__3WM2D\",\"Button\":\"button_Button__6nZOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__2-kFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"app_spinner__2---I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"Searchbar_SearchBar__LfKFq\",\"SearchForm\":\"Searchbar_SearchForm__6IESN\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3GCFM\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2PEo_\",\"SearchFormInput\":\"Searchbar_SearchFormInput__t3YYs\"};","import React, {useState} from \"react\";\nimport style from './styles/Searchbar.module.scss';\n\n\nexport default function Searchbar({onClick}){\n\n    const [query,setQuery]=useState('');\n\n    const handleChangeQuery =(e)=> {\n        setQuery(e.currentTarget.value);\n    }\n\n    const handleSubmitForm =(e) => {\n        e.preventDefault();\n        onClick(query);\n        setQuery('')\n    }\n\n\n        return (\n            <header className={style.SearchBar}>\n                <form className={style.SearchForm} onSubmit={handleSubmitForm}>\n                    <button type=\"submit\" className={style.SearchFormButton}>\n                        <span className={style.SearchFormButtonLabel}>Search</span>\n                    </button>\n                    <input\n                        className={style.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={query}\n                        onChange={handleChangeQuery}\n                    />\n                </form>\n            </header>\n        )\n    }\n\n\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport style from './styles/imageGalleryItems.module.scss';\n\n\nconst ImageGalleryItem =({imgGallery,onClickImg}) => (\n\n    <>\n        {imgGallery.map(({id, webformatURL, user}) => (\n            <li className={style.ImageGalleryItem} key={id}>\n                <img src={webformatURL} alt={user} className={style.ImageGalleryItemImage} onClick={()=> onClickImg(id)}/>\n            </li>\n        ))}\n    </>\n)\n\nImageGalleryItem.propTypes ={\n    imgGallery:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.number.isRequired,\n        webformatURL:PropTypes.string.isRequired,\n        user:PropTypes.string.isRequired\n\n    })).isRequired\n}\n\nexport default ImageGalleryItem;","import React from \"react\";\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport style from './styles/imageGallery.module.scss'\n\n\n\nconst ImageGallery=({imgGallery,onClickImg}) => (\n    <ul className={style.ImageGallery}>\n<ImageGalleryItem imgGallery={imgGallery} onClickImg={onClickImg} />\n    </ul>\n)\n\n\nexport default ImageGallery;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport style from './styles/button.module.scss';\n\nconst Button = ({text,onClick,status})=> (\n    <div className={style.Container}>\n        <button type=\"button\" onClick={onClick} className={style.Button} disabled={status}>{text}</button>\n    </div>\n\n)\n\nButton.propTypes={\n    text:PropTypes.string.isRequired,\n    status:PropTypes.bool.isRequired\n}\n\nexport default Button;\n","import React, {useCallback, useEffect} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss';\n\n\nconst modalRoot=document.querySelector('#modal-root')\n\nexport default function Modal({children,onClose}){\n\n    const closeModalEscape =useCallback((e) => {\n        if (e.code === \"Escape\") {\n            onClose();\n        }\n    },[onClose])\n\n\n    useEffect(()=> {\n        window.addEventListener('keydown', closeModalEscape);\n        return () =>{\n            window.removeEventListener('keydown', closeModalEscape)\n        }\n    },[closeModalEscape]);\n\n\n    const closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n\n    return createPortal(<div className={style.Modal__backdrop} onClick={closeClickModal}>\n        <div className={style.Modal__content}>{children}</div>\n    </div>,modalRoot)\n}\n","import React, { useEffect, useState} from \"react\";\nimport fetchGallery from './services/gallery-api'\nimport Searchbar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Modal from './components/Modal';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport style from './styles/app.module.scss';\n\n\n\nexport default function App(){\n\n    const [imgGallery,setImgGallery]=useState([]);\n    const [searchQuery,setSearchQuery]=useState('');\n    const [page,setPage]=useState(1);\n    const [largeImageURL,setLargeImageURL]=useState('');\n    const [isLoading,setIsLoading]=useState(false);\n    const [activeButton,setActiveButton]=useState(false);\n\n    useEffect(()=> {\n        if(searchQuery) {\n            fetchImages();\n        }\n    },[searchQuery])\n\n\n   const onChangeQuery = (query) => {\n       setSearchQuery(query);\n       setPage(1);\n       setImgGallery([]);\n    }\n//\n   const onOpenImgGallery = (id) => {\n        const {largeImageURL}=imgGallery.find(img => img.id === id);\n\n        setLargeImageURL(largeImageURL);\n    }\n//\n   const onCloseImgGallery = () => {\n\n       setLargeImageURL('')\n    }\n\n\n   const fetchImages = () => {\n\n        setIsLoading(true);\n        setActiveButton(true);\n\n        const options={searchQuery,page};\n\n        fetchGallery(options)\n            .then((hits) => {\n                    setImgGallery([...imgGallery,...hits]);\n                    setPage(prevPage => prevPage + 1);\n                    setActiveButton(false)})\n            .then(()=> {\n                if(page >1){\n                    window.scrollTo({\n                        top: document.documentElement.scrollHeight,\n                        behavior: 'smooth',\n                    })\n                }\n        }).finally(() => setIsLoading(false))\n\n    }\n\n\n\n        return (\n            <>\n                <Searchbar onClick={onChangeQuery}/>\n                <ImageGallery imgGallery={imgGallery} onClickImg={onOpenImgGallery}/>\n                {isLoading &&\n                <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} timeout={3000} className={style.spinner}/>}\n                {imgGallery.length > 0 && !isLoading &&\n                <Button text=\"Load mode\" onClick={fetchImages} status={activeButton}/>}\n                {largeImageURL && <Modal onClose={onCloseImgGallery} imgLarge={largeImageURL} altImg={searchQuery}/>}\n\n            </>\n        )\n    }\n\n\n","import axios from \"axios\";\n\n\nexport default function fetchGallery ({searchQuery='',page=1})  {\n    return (\n        axios.get(`https://pixabay.com/api/?q=${searchQuery}\n        &page=${page}&key=21751177-a266d6ba191f1accff72cdd2b&image_type=photo&orientation=horizontal&per_page=12`)\n    ).then(({data: {hits}}) => hits)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}